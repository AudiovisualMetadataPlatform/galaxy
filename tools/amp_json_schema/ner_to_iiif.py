import json
import sys
import os
import aws_transcribe_to_schema
from speech_to_text_schema import SpeechToText, SpeechToTextMedia, SpeechToTextResult, SpeechToTextScore, SpeechToTextWord

# Convert NER generated JSON file to IIIF manifest JSON file.
# Usage: ner_to_iiif.py input_ner input_iiif context_json
def main():
    # parse command line arguments
    input_ner = sys.argv[1]     # input file generated by NER in standard AMP json format to convert from
    input_iiif = sys.argv[2]    # input file to feed to NER editor in IIIF json format to convert to
    context_json = sys.argv[3]  # context info as json string needed for creating HMGM tasks

    try:
        context = json.loads(context_json)
		media_info_path = context['primaryfileMediaInfo']
		duration = get_media_duration(media_info_path)
        


# Get media duration from the media info file with the given mediaInfoPath.
def get_media_duration(media_info_path):
	try:
		with open(media_info_path, 'r') as media_info_file:
			media_info = json.load(task_file)
			duration = media_info['streams']['audio']['duration']
	 except Exception as e:
        print(f"Exception reading media info from {media_info_path}", e)
        duration = 0
	return duration





if __name__ == "__main__":
    main()    
