[tox]
# envlist is the list of environments that are tested when `tox` is run without any option
# hyphens in an environment name are used to delimit factors
<<<<<<< HEAD
envlist = check_py3_compatibility, py27-first_startup, py27-lint, py27-lint_docstring_include_list, py27-unit, py34-first_startup, py34-lint, py34-unit, qunit, validate_test_tools
=======
envlist = py36-first_startup, py36-lint, py36-lint_docstring_include_list, py36-mypy, py36-unit, test_galaxy_packages, validate_test_tools
>>>>>>> refs/heads/release_21.01
skipsdist = True

<<<<<<< HEAD
=======
[testenv]
commands =
    first_startup: bash .ci/first_startup.sh
    lint: bash .ci/flake8_wrapper.sh
    lint_docstring: bash .ci/flake8_wrapper_docstrings.sh --exclude
    lint_docstring_include_list: bash .ci/flake8_wrapper_docstrings.sh --include

    unit: bash run_tests.sh -u
    # start with test here but obviously someday all of it...
    mypy: mypy test lib
whitelist_externals = bash
passenv = 
    CI CONDA_EXE
    GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
setenv =
    first_startup: GALAXY_PYTHON=python
    first_startup: GALAXY_CONFIG_DATABASE_AUTO_MIGRATE=true
    py{36,37,38}-first_startup: GALAXY_VIRTUAL_ENV=.venv3
    unit: GALAXY_VIRTUAL_ENV={envdir}
    unit: GALAXY_ENABLE_BETA_COMPRESSED_GENBANK_SNIFFING=1
    mulled: GALAXY_TEST_INCLUDE_SLOW=1
    check_indexes: GALAXY_TEST_FORCE_DATABASE_MIGRATION=1
    check_indexes: GALAXY_SKIP_CLIENT_BUILD=1
deps =
    lint,lint_docstring,lint_docstring_include_list: -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt
    unit: mock-ssh-server
    mypy: mypy==0.790

[testenv:mulled]
commands =  bash run_tests.sh --skip-venv -u test/unit/tool_util/mulled

>>>>>>> refs/heads/release_21.01
[testenv:check_py3_compatibility]
commands = bash .ci/check_py3_compatibility.sh
whitelist_externals = bash

[testenv:check_python_dependencies]
commands = make list-dependency-updates # someday change exit code on this.
whitelist_externals = make

[testenv:mako_count]
commands = bash .ci/check_mako.sh
whitelist_externals = bash

[testenv:py27-first_startup]
commands = bash .ci/first_startup.sh
whitelist_externals = bash

[testenv:py27-lint]
commands = bash .ci/flake8_wrapper.sh
whitelist_externals = bash
deps = -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt

<<<<<<< HEAD
[testenv:py27-lint_docstring]
commands = bash .ci/flake8_wrapper_docstrings.sh --exclude
whitelist_externals = bash
deps = -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt

[testenv:py27-lint_docstring_include_list]
commands = bash .ci/flake8_wrapper_docstrings.sh --include
whitelist_externals = bash
deps = -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt

[testenv:py27-unit]
commands = bash run_tests.sh -u
whitelist_externals = bash
setenv =
    GALAXY_VIRTUAL_ENV={envdir}
    GALAXY_ENABLE_BETA_COMPRESSED_GENBANK_SNIFFING=1
deps =
    mock
    mock-ssh-server

[testenv:py34-first_startup]
commands =
    bash .ci/first_startup.sh
setenv =
    GALAXY_VIRTUAL_ENV=.venv3
whitelist_externals = bash

[testenv:py34-lint]
commands = bash .ci/flake8_wrapper.sh
whitelist_externals = bash
deps = -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt

[testenv:py34-unit]
commands = bash run_tests.sh -u
whitelist_externals = bash
setenv =
    GALAXY_VIRTUAL_ENV={envdir}
deps =
    mock
    mock-ssh-server

[testenv:py35-lint]
commands = bash .ci/flake8_wrapper.sh
whitelist_externals = bash
deps = -rlib/galaxy/dependencies/pipfiles/flake8/pinned-requirements.txt

[testenv:qunit]
commands = make client-test
whitelist_externals = make
=======
[testenv:test_galaxy_packages]
commands = bash packages/test.sh
>>>>>>> refs/heads/release_21.01

[testenv:validate_test_tools]
commands = bash .ci/validate_test_tools.sh
whitelist_externals = bash

[testenv:web_controller_line_count]
commands = bash .ci/check_controller.sh
<<<<<<< HEAD
whitelist_externals = bash
=======

[testenv:check_indexes]
commands = 
    bash scripts/common_startup.sh
    bash create_db.sh
    bash check_model.sh
>>>>>>> refs/heads/release_21.01
